import {PrismaClient} from "@prisma/client";
import Field from "../model/Field";


const prisma = new PrismaClient();
export class FieldRepository{
    //using await in here make function less flexible
    //The Omit<Field, 'fieldId'> part of the code removes the fieldId property from the Field because fieldId generated by backend
    async createField(data: Omit<Field, 'fieldId'>): Promise<Field> {
       return  prisma.field.create({ data });

    }

    async getAllFields(){
       return   prisma.field.findMany()

    }

    async  getFieldById(fieldId:string){
       return  prisma.field.findUnique(
            {
                where: { fieldId }
            }
        )

    }

   // Partial<Field> makes all properties of the Field type optional.
    async updateField(fieldId: string, data: Partial<Field>): Promise<Field> {
        return prisma.field.update({ where: { fieldId }, data });
    }


    async deleteField(fieldId:string){
        return  prisma.field.delete(
            {
                where:{fieldId}
            }

        )

    }


    

}